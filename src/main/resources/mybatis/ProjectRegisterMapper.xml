<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ztbdz.tenderee.mapper.ProjectRegisterMapper">
	<select id="selectByCountProjectId" resultMap="ProjectRegisterAndProjectAndMemberAndAccount">
		select 
			pr.*,pr.member_id as prMemberId,m.account_id,a.account_name as unitName,a.member,a.phone as aPhone,t.id as tid,t.tenderee_name,p.procurement_documents,p.review_end_date,p.money,p.procurement_method,p.project_name,p.project_code,p.enroll_end_date,a.account_code as aCode,a.email as aEmail,p.bid_opening_time,p.project_overview
		from
		   project_register pr
		left join project p on pr.project_id=p.id
		left join tenderee t on t.project_id=p.id
		left join member m on m.id=pr.member_id
		left join account a on a.id=m.account_id
		where
			1=1
		<if test="project != null">
			<if test="project.id != null">
				and p.id=#{project.id}
			</if>
		</if>
		<if test="memberId != null">
			<if test="state==0">
				and pr.member_id = #{memberId}
			</if>
			<if test="state==1 or state==4">
				and t.member_id = #{memberId}
			</if>
		</if>
		<if test="state!=3 and state!=4">
			group by pr.project_id
			order by p.update_date desc
		</if>
		<if test="state==3">
			and (pr.state=0 or pr.state=1 or pr.state=2)
			order by pr.state asc,p.update_date desc
		</if>
		<if test="state==4">
			order by pr.state desc,p.update_date desc,p.project_name
		</if>
	</select>
	<resultMap id="ProjectRegisterAndProjectAndMemberAndAccount" type="ProjectRegister">
		<result property="project.id" column="project_id"/>
		<result property="project.procurementDocuments" column="procurement_documents"/>
		<result property="project.reviewEndDate" column="review_end_date"/>
		<result property="project.money" column="money"/>
		<result property="project.procurementMethod" column="procurement_method"/>
		<result property="project.projectName" column="project_name"/>
		<result property="project.projectCode" column="project_code"/>
		<result property="project.enrollEndDate" column="enroll_end_date"/>
		<result property="project.bidOpeningTime" column="bid_opening_time"/>
		<result property="project.projectOverview" column="project_overview"/>

		<result property="project.tenderee.id" column="tid"/>
		<result property="project.tenderee.tendereeName" column="tenderee_name"/>
		<result property="project_register.create_date" column="createDate"/>

		<result property="member.id" column="prMemberId"/>

		<result property="member.account.id" column="account_id"/>
		<result property="member.account.accountName" column="unitName"/>
		<result property="member.account.member" column="member"/>
		<result property="member.account.phone" column="aPhone"/>
		<result property="member.account.accountCode" column="aCode"/>
		<result property="member.account.email" column="aEmail"/>
	</resultMap>

	<select id="getProject" resultMap="ProjectRegisterAndProjectAndMemberAndAccount">
		select
		pr.*,pr.member_id as prMemberId,m.account_id,a.account_name as unitName,a.member,a.phone as aPhone,t.id as tid,t.tenderee_name,p.procurement_documents,p.review_end_date,p.money,p.procurement_method,p.project_name,p.project_code,p.enroll_end_date,a.account_code as aCode,a.email as aEmail,p.bid_opening_time,p.project_overview
		from
		project_register pr
		left join project p on pr.project_id=p.id
		left join tenderee t on t.project_id=p.id
		left join member m on m.id=pr.member_id
		left join account a on a.id=m.account_id
		where
		1=1
		<if test="projectId != null">
			and p.id=#{projectId}
		</if>
		<if test="state != null">
			<if test="state == 12">
				and (pr.state=0 or pr.state=1 or pr.state=2)
			</if>
			<if test="state != 12">
				and pr.state=#{state}
			</if>
		</if>
		order by pr.create_date
	</select>

	<select id="selectProjectAndMemberById" resultMap="ProjectRegisterAndProjectAndMemberAndAccount">
		select
		pr.*,pr.member_id as prMemberId,m.account_id,a.account_name as unitName,a.member,a.phone as aPhone,t.id as tid,t.tenderee_name,p.procurement_documents,p.review_end_date,p.money,p.procurement_method,p.project_name,p.project_code,p.enroll_end_date,a.account_code as aCode,a.email as aEmail,p.bid_opening_time,p.project_overview
		from
		project_register pr
		left join project p on pr.project_id=p.id
		left join tenderee t on t.project_id=p.id
		left join member m on m.id=pr.member_id
		left join account a on a.id=m.account_id
		where  pr.id=#{id}
	</select>


	<select id="selectListById" resultType="ProjectRegister">
		select
			*
		from
		   project_register pr
		where
		   1=1
		<if test="notIds != null and notIds.size() >0">
			and pr.id not in
			<foreach collection='notIds' item='item' open='(' separator=',' close=')'>
				#{item}
			</foreach>
		</if>
		<if test="id != null">
			and pr.project_id = (select project_id from project_register where id=#{id})
		</if>
	</select>


	<select id="selectMemberProjectByIds" resultMap="ProjectRegisterAndProjectAndMember">
		select
			*
		from
		   project_register pr
		left join project p on pr.project_id=p.id
		left join member m on pr.member_id=m.id
		where
		   pr.id in
		<foreach collection='ids' item='item' open='(' separator=',' close=')'>
			#{item}
		</foreach>
	</select>
	<resultMap id="ProjectRegisterAndProjectAndMember" type="ProjectRegister">
		<result property="project.id" column="project_id"/>
		<result property="project.money" column="money"/>

		<result property="member.id" column="member_id"/>
	</resultMap>

	<select id="selectInvoice" resultMap="ProjectRegisterAndProjectAndMemberAndAccount">
		select
		pr.*,pr.member_id as prMemberId,m.account_id,a.account_name as unitName,a.member,a.phone as aPhone,t.id as tid,t.tenderee_name,p.procurement_documents,p.review_end_date,p.money,p.procurement_method,p.project_name,p.project_code,p.enroll_end_date,a.account_code as aCode,a.email as aEmail,p.bid_opening_time,p.project_overview
		from
		project_register pr
		left join project p on pr.project_id=p.id
		left join tenderee t on t.project_id=p.id
		left join member m on m.id=pr.member_id
		left join account a on a.id=m.account_id
		where
		1=1
		and  pr.is_invoice=0
		order by pr.is_invoice asc,p.update_date desc
	</select>

</mapper>